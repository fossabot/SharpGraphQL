@page "/"
@page "/dashboard"
@inject IJSRuntime JSRuntime
@using SharpGraph.Core
@using SharpGraph.Core.GraphQL

<PageTitle>Dashboard - SharpGraph IDE</PageTitle>

<!-- Small boxes (Stat box) -->
<div class="row">
    <div class="col-lg-3 col-6">
        <!-- small box -->
        <div class="small-box bg-info">
            <div class="inner">
                <h3>@TotalTables</h3>
                <p>Tables</p>
            </div>
            <div class="icon">
                <i class="fas fa-table"></i>
            </div>
            <a href="/tables" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-3 col-6">
        <!-- small box -->
        <div class="small-box bg-success">
            <div class="inner">
                <h3>@TotalRecords<sup style="font-size: 20px">+</sup></h3>
                <p>Records</p>
            </div>
            <div class="icon">
                <i class="fas fa-database"></i>
            </div>
            <a href="/tables" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-3 col-6">
        <!-- small box -->
        <div class="small-box bg-warning">
            <div class="inner">
                <h3>@TotalIndexes</h3>
                <p>Indexes</p>
            </div>
            <div class="icon">
                <i class="fas fa-search"></i>
            </div>
            <a href="/indexes" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-3 col-6">
        <!-- small box -->
        <div class="small-box bg-danger">
            <div class="inner">
                <h3>@CacheHitRate%</h3>
                <p>Cache Hit Rate</p>
            </div>
            <div class="icon">
                <i class="fas fa-tachometer-alt"></i>
            </div>
            <a href="/metrics" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
        </div>
    </div>
    <!-- ./col -->
</div>
<!-- /.row -->

<!-- Main row -->
<div class="row">
    <!-- Left col -->
    <section class="col-lg-7 connectedSortable">
        <!-- Database Overview -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-database mr-1"></i>
                    Database Overview
                </h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="refresh" @onclick="RefreshData">
                        <i class="fas fa-sync-alt"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-sm table-striped">
                        <thead>
                            <tr>
                                <th>Table</th>
                                <th>Records</th>
                                <th>Size</th>
                                <th>Last Modified</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var table in Tables)
                            {
                                <tr>
                                    <td><i class="fas fa-table text-info mr-1"></i>@table.Name</td>
                                    <td><span class="badge badge-primary">@table.RecordCount</span></td>
                                    <td>@table.Size</td>
                                    <td>@table.LastModified.ToString("yyyy-MM-dd HH:mm")</td>
                                    <td>
                                        <a href="/tables/@table.Name" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <button class="btn btn-sm btn-outline-info" @onclick="() => ShowTableSchema(table.Name)">
                                            <i class="fas fa-code"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- /.card -->

        <!-- Quick Actions -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-bolt mr-1"></i>
                    Quick Actions
                </h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <a href="/query" class="btn btn-primary btn-block">
                            <i class="fab fa-graphql mr-2"></i>
                            GraphQL Playground
                        </a>
                    </div>
                    <div class="col-md-6">
                        <a href="/schema" class="btn btn-info btn-block">
                            <i class="fas fa-sitemap mr-2"></i>
                            View Schema
                        </a>
                    </div>
                    <div class="col-md-6 mt-2">
                        <a href="/import" class="btn btn-success btn-block">
                            <i class="fas fa-upload mr-2"></i>
                            Import Data
                        </a>
                    </div>
                    <div class="col-md-6 mt-2">
                        <a href="/export" class="btn btn-warning btn-block">
                            <i class="fas fa-download mr-2"></i>
                            Export Data
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.card -->
    </section>
    <!-- /.Left col -->

    <!-- right col (We are only adding the ID to make the widgets sortable)-->
    <section class="col-lg-5 connectedSortable">
        <!-- System Status -->
        <div class="card bg-gradient-info">
            <div class="card-header border-0">
                <h3 class="card-title">
                    <i class="fas fa-server mr-1"></i>
                    System Status
                </h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-info btn-sm" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-12">
                        <div class="progress-group">
                            Database Engine
                            <span class="float-right"><b>@DatabaseStatus</b></span>
                            <div class="progress progress-sm">
                                <div class="progress-bar bg-success" style="width: 100%"></div>
                            </div>
                        </div>
                        
                        <div class="progress-group">
                            Memory Usage
                            <span class="float-right"><b>@MemoryUsage</b></span>
                            <div class="progress progress-sm">
                                <div class="progress-bar bg-primary" style="width: @MemoryUsagePercent%"></div>
                            </div>
                        </div>
                        
                        <div class="progress-group">
                            Cache Efficiency
                            <span class="float-right"><b>@CacheHitRate%</b></span>
                            <div class="progress progress-sm">
                                <div class="progress-bar bg-warning" style="width: @CacheHitRate%"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.card -->

        <!-- Recent Activity -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-history mr-1"></i>
                    Recent Activity
                </h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body p-0">
                <ul class="list-group list-group-flush">
                    @foreach (var activity in RecentActivities)
                    {
                        <li class="list-group-item">
                            <div class="d-flex w-100 justify-content-between">
                                <h6 class="mb-1">@activity.Action</h6>
                                <small>@activity.Timestamp.ToString("HH:mm")</small>
                            </div>
                            <p class="mb-1">@activity.Description</p>
                            <small class="text-muted">@activity.Details</small>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <!-- /.card -->

        <!-- Performance Chart -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-chart-line mr-1"></i>
                    Performance Metrics
                </h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-6 text-center">
                        <div class="h5 text-primary">@QueryCount</div>
                        <div class="text-muted">Queries Today</div>
                    </div>
                    <div class="col-6 text-center">
                        <div class="h5 text-success">@AverageResponseTime ms</div>
                        <div class="text-muted">Avg Response</div>
                    </div>
                </div>
                <div class="mt-3">
                    <div class="text-muted text-center">Query performance is within normal parameters</div>
                </div>
            </div>
        </div>
        <!-- /.card -->
    </section>
    <!-- /.right col -->
</div>
<!-- /.row (main row) -->

@code {
    // Dashboard statistics
    private int TotalTables { get; set; } = 0;
    private int TotalRecords { get; set; } = 0;
    private int TotalIndexes { get; set; } = 0;
    private int CacheHitRate { get; set; } = 95;
    private string DatabaseStatus { get; set; } = "Online";
    private string MemoryUsage { get; set; } = "256 MB";
    private int MemoryUsagePercent { get; set; } = 65;
    private int QueryCount { get; set; } = 1247;
    private decimal AverageResponseTime { get; set; } = 12.5m;

    // Data collections
    private List<TableInfo> Tables { get; set; } = new();
    private List<ActivityInfo> RecentActivities { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadDashboardData();
    }

    private async Task LoadDashboardData()
    {
        // In a real implementation, this would load data from SharpGraph services
        // For now, we'll use mock data
        
        Tables = new List<TableInfo>
        {
            new() { Name = "User", RecordCount = 150, Size = "12.5 KB", LastModified = DateTime.Now.AddHours(-2) },
            new() { Name = "Post", RecordCount = 89, Size = "8.3 KB", LastModified = DateTime.Now.AddHours(-1) },
            new() { Name = "Comment", RecordCount = 324, Size = "15.7 KB", LastModified = DateTime.Now.AddMinutes(-30) },
            new() { Name = "Category", RecordCount = 12, Size = "1.2 KB", LastModified = DateTime.Now.AddDays(-1) }
        };

        TotalTables = Tables.Count;
        TotalRecords = Tables.Sum(t => t.RecordCount);
        TotalIndexes = Tables.Count * 2; // Assume 2 indexes per table on average

        RecentActivities = new List<ActivityInfo>
        {
            new() { Action = "GraphQL Query", Description = "Executed query on User table", Details = "SELECT users with posts", Timestamp = DateTime.Now.AddMinutes(-5) },
            new() { Action = "Data Import", Description = "Imported 25 new records", Details = "JSON import to Post table", Timestamp = DateTime.Now.AddMinutes(-15) },
            new() { Action = "Schema Update", Description = "Added new field to User type", Details = "Added 'lastLogin' field", Timestamp = DateTime.Now.AddHours(-1) },
            new() { Action = "Index Creation", Description = "Created index on email field", Details = "Hash index for User.email", Timestamp = DateTime.Now.AddHours(-2) }
        };

        StateHasChanged();
    }

    private async Task RefreshData()
    {
        await LoadDashboardData();
        await JSRuntime.InvokeVoidAsync("showAlert", "Dashboard data refreshed", "success");
    }

    private async Task ShowTableSchema(string tableName)
    {
        await JSRuntime.InvokeVoidAsync("showAlert", $"Schema for {tableName} - Feature coming soon!", "info");
    }

    // Data models
    public class TableInfo
    {
        public string Name { get; set; } = string.Empty;
        public int RecordCount { get; set; }
        public string Size { get; set; } = string.Empty;
        public DateTime LastModified { get; set; }
    }

    public class ActivityInfo
    {
        public string Action { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public string Details { get; set; } = string.Empty;
        public DateTime Timestamp { get; set; }
    }
}
